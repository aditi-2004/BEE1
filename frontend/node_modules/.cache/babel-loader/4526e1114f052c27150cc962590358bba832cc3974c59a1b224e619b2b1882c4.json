{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS\\\\VS\\\\frontend\\\\src\\\\components\\\\CandidateDashboard.js\",\n  _s = $RefreshSig$();\n// // src/components/CandidateDashboard.js\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const CandidateDashboard = () => {\n//   const [name, setName] = useState('');\n//   const [facility, setFacility] = useState('');\n//   const [experience, setExperience] = useState(''); // Candidate's experience\n//   const [manifesto, setManifesto] = useState(''); // Candidate's election manifesto\n//   const [education, setEducation] = useState(''); // Candidate's education\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const newCandidate = { name, facility, experience, manifesto, education };\n//     await axios.post('/api/candidates', newCandidate);\n//     // Optionally, reset the form or show a success message\n//     setName('');\n//     setFacility('');\n//     setExperience('');\n//     setManifesto('');\n//     setEducation('');\n//   };\n\n//   return (\n//     <div>\n//       <h1>Candidate Dashboard</h1>\n//       <form onSubmit={handleSubmit}>\n//         {/* Name Input */}\n//         <div>\n//           <label>Name:</label>\n//           <input \n//             type=\"text\" \n//             placeholder=\"Your Name\" \n//             value={name} \n//             onChange={(e) => setName(e.target.value)} \n//             required \n//           />\n//         </div>\n\n//         {/* Facilities Input */}\n//         <div>\n//           <label>Facilities:</label>\n//           <input \n//             type=\"text\" \n//             placeholder=\"Facilities you provide\" \n//             value={facility} \n//             onChange={(e) => setFacility(e.target.value)} \n//             required \n//           />\n//         </div>\n\n//         {/* Experience Input */}\n//         <div>\n//           <label>Experience:</label>\n//           <input \n//             type=\"text\" \n//             placeholder=\"Your experience in public service\" \n//             value={experience} \n//             onChange={(e) => setExperience(e.target.value)} \n//             required \n//           />\n//         </div>\n\n//         {/* Manifesto Input */}\n//         <div>\n//           <label>Election Manifesto:</label>\n//           <textarea\n//             placeholder=\"Write your election manifesto\"\n//             value={manifesto}\n//             onChange={(e) => setManifesto(e.target.value)}\n//             required\n//           />\n//         </div>\n\n//         {/* Education Input */}\n//         <div>\n//           <label>Education:</label>\n//           <input \n//             type=\"text\" \n//             placeholder=\"Your highest qualification\" \n//             value={education} \n//             onChange={(e) => setEducation(e.target.value)} \n//             required \n//           />\n//         </div>\n\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default CandidateDashboard;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const CandidateDashboard = () => {\n//   const [name, setName] = useState('');\n//   const [facility, setFacility] = useState('');\n//   const [experience, setExperience] = useState('');\n//   const [manifesto, setManifesto] = useState('');\n//   const [education, setEducation] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const newCandidate = { name, facilities: facility, experience, manifesto, education };\n//     try {\n//       await axios.post('/api/candidates', newCandidate);\n//       setName('');\n//       setFacility('');\n//       setExperience('');\n//       setManifesto('');\n//       setEducation('');\n//       alert('Candidate added successfully');\n//     } catch (error) {\n//       console.error('Error adding candidate:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Candidate Dashboard</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>Name:</label>\n//           <input type=\"text\" placeholder=\"Your Name\" value={name} onChange={(e) => setName(e.target.value)} required />\n//         </div>\n//         <div>\n//           <label>Facilities:</label>\n//           <input type=\"text\" placeholder=\"Facilities you provide\" value={facility} onChange={(e) => setFacility(e.target.value)} required />\n//         </div>\n//         <div>\n//           <label>Experience:</label>\n//           <input type=\"text\" placeholder=\"Your experience in public service\" value={experience} onChange={(e) => setExperience(e.target.value)} required />\n//         </div>\n//         <div>\n//           <label>Election Manifesto:</label>\n//           <textarea placeholder=\"Write your election manifesto\" value={manifesto} onChange={(e) => setManifesto(e.target.value)} required />\n//         </div>\n//         <div>\n//           <label>Education:</label>\n//           <input type=\"text\" placeholder=\"Your highest qualification\" value={education} onChange={(e) => setEducation(e.target.value)} required />\n//         </div>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default CandidateDashboard;\n\n// // src/components/CandidateDashboard.js\n// import React, { useState } from 'react';\n\n// const CandidateDashboard = () => {\n//   const [candidate, setCandidate] = useState({\n//     name: '',\n//     facilities: '',\n//     experience: '',\n//     manifesto: '',\n//     education: ''\n//   });\n\n//   const handleChange = (e) => {\n//     setCandidate({ ...candidate, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const token = localStorage.getItem('token');\n//       const response = await fetch('/api/candidates', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//           'Authorization': `Bearer ${token}`\n//         },\n//         body: JSON.stringify(candidate)\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to add candidate');\n//       }\n\n//       alert('Candidate added successfully');\n//       setCandidate({\n//         name: '',\n//         facilities: '',\n//         experience: '',\n//         manifesto: '',\n//         education: ''\n//       });\n//     } catch (error) {\n//       console.error('Error adding candidate:', error);\n//       alert('Failed to add candidate');\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <h2>Add Candidate</h2>\n//       <input\n//         type=\"text\"\n//         name=\"name\"\n//         placeholder=\"Name\"\n//         value={candidate.name}\n//         onChange={handleChange}\n//         required\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"facilities\"\n//         placeholder=\"Facilities\"\n//         value={candidate.facilities}\n//         onChange={handleChange}\n//         required\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"experience\"\n//         placeholder=\"Experience\"\n//         value={candidate.experience}\n//         onChange={handleChange}\n//         required\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"manifesto\"\n//         placeholder=\"Manifesto\"\n//         value={candidate.manifesto}\n//         onChange={handleChange}\n//         required\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"education\"\n//         placeholder=\"Education\"\n//         value={candidate.education}\n//         onChange={handleChange}\n//         required\n//       />\n//       <button type=\"submit\">Submit</button>\n//     </form>\n//   );\n// };\n\n// export default CandidateDashboard;\n// src/components/CandidateDashboard.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CandidateDashboard = () => {\n  _s();\n  const [candidate, setCandidate] = useState({\n    name: '',\n    facilities: '',\n    experience: '',\n    manifesto: '',\n    education: ''\n  });\n  const [candidates, setCandidates] = useState([]);\n\n  // Function to fetch candidates\n  const fetchCandidates = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('/api/candidates', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch candidates');\n      }\n      const data = await response.json();\n      setCandidates(data);\n    } catch (error) {\n      console.error('Error fetching candidates:', error);\n      alert('Failed to load candidates');\n    }\n  };\n  useEffect(() => {\n    fetchCandidates();\n  }, []);\n  const handleChange = e => {\n    setCandidate({\n      ...candidate,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('/api/candidates', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(candidate)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add candidate');\n      }\n      alert('Candidate added successfully');\n      setCandidate({\n        name: '',\n        facilities: '',\n        experience: '',\n        manifesto: '',\n        education: ''\n      });\n\n      // Fetch updated candidates after adding a new one\n      fetchCandidates();\n    } catch (error) {\n      console.error('Error adding candidate:', error);\n      alert('Failed to add candidate');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Candidate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Name\",\n        value: candidate.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"facilities\",\n        placeholder: \"Facilities\",\n        value: candidate.facilities,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"experience\",\n        placeholder: \"Experience\",\n        value: candidate.experience,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"manifesto\",\n        placeholder: \"Manifesto\",\n        value: candidate.manifesto,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"education\",\n        placeholder: \"Education\",\n        value: candidate.education,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Candidates List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: candidates.map(cand => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [cand.name, \" - \", cand.facilities, \" - \", cand.experience, \" - \", cand.manifesto, \" - \", cand.education]\n      }, cand._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 5\n  }, this);\n};\n_s(CandidateDashboard, \"qT8IUKoGexXD/nFsv8V5L08a7G8=\");\n_c = CandidateDashboard;\nexport default CandidateDashboard;\nvar _c;\n$RefreshReg$(_c, \"CandidateDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CandidateDashboard","_s","candidate","setCandidate","name","facilities","experience","manifesto","education","candidates","setCandidates","fetchCandidates","token","localStorage","getItem","response","fetch","headers","ok","Error","data","json","error","console","alert","handleChange","e","target","value","handleSubmit","preventDefault","method","body","JSON","stringify","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","map","cand","_id","_c","$RefreshReg$"],"sources":["D:/VS/VS/frontend/src/components/CandidateDashboard.js"],"sourcesContent":["// // src/components/CandidateDashboard.js\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const CandidateDashboard = () => {\r\n//   const [name, setName] = useState('');\r\n//   const [facility, setFacility] = useState('');\r\n//   const [experience, setExperience] = useState(''); // Candidate's experience\r\n//   const [manifesto, setManifesto] = useState(''); // Candidate's election manifesto\r\n//   const [education, setEducation] = useState(''); // Candidate's education\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const newCandidate = { name, facility, experience, manifesto, education };\r\n//     await axios.post('/api/candidates', newCandidate);\r\n//     // Optionally, reset the form or show a success message\r\n//     setName('');\r\n//     setFacility('');\r\n//     setExperience('');\r\n//     setManifesto('');\r\n//     setEducation('');\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Candidate Dashboard</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         {/* Name Input */}\r\n//         <div>\r\n//           <label>Name:</label>\r\n//           <input \r\n//             type=\"text\" \r\n//             placeholder=\"Your Name\" \r\n//             value={name} \r\n//             onChange={(e) => setName(e.target.value)} \r\n//             required \r\n//           />\r\n//         </div>\r\n\r\n//         {/* Facilities Input */}\r\n//         <div>\r\n//           <label>Facilities:</label>\r\n//           <input \r\n//             type=\"text\" \r\n//             placeholder=\"Facilities you provide\" \r\n//             value={facility} \r\n//             onChange={(e) => setFacility(e.target.value)} \r\n//             required \r\n//           />\r\n//         </div>\r\n\r\n//         {/* Experience Input */}\r\n//         <div>\r\n//           <label>Experience:</label>\r\n//           <input \r\n//             type=\"text\" \r\n//             placeholder=\"Your experience in public service\" \r\n//             value={experience} \r\n//             onChange={(e) => setExperience(e.target.value)} \r\n//             required \r\n//           />\r\n//         </div>\r\n\r\n//         {/* Manifesto Input */}\r\n//         <div>\r\n//           <label>Election Manifesto:</label>\r\n//           <textarea\r\n//             placeholder=\"Write your election manifesto\"\r\n//             value={manifesto}\r\n//             onChange={(e) => setManifesto(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Education Input */}\r\n//         <div>\r\n//           <label>Education:</label>\r\n//           <input \r\n//             type=\"text\" \r\n//             placeholder=\"Your highest qualification\" \r\n//             value={education} \r\n//             onChange={(e) => setEducation(e.target.value)} \r\n//             required \r\n//           />\r\n//         </div>\r\n\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CandidateDashboard;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const CandidateDashboard = () => {\r\n//   const [name, setName] = useState('');\r\n//   const [facility, setFacility] = useState('');\r\n//   const [experience, setExperience] = useState('');\r\n//   const [manifesto, setManifesto] = useState('');\r\n//   const [education, setEducation] = useState('');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const newCandidate = { name, facilities: facility, experience, manifesto, education };\r\n//     try {\r\n//       await axios.post('/api/candidates', newCandidate);\r\n//       setName('');\r\n//       setFacility('');\r\n//       setExperience('');\r\n//       setManifesto('');\r\n//       setEducation('');\r\n//       alert('Candidate added successfully');\r\n//     } catch (error) {\r\n//       console.error('Error adding candidate:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Candidate Dashboard</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label>Name:</label>\r\n//           <input type=\"text\" placeholder=\"Your Name\" value={name} onChange={(e) => setName(e.target.value)} required />\r\n//         </div>\r\n//         <div>\r\n//           <label>Facilities:</label>\r\n//           <input type=\"text\" placeholder=\"Facilities you provide\" value={facility} onChange={(e) => setFacility(e.target.value)} required />\r\n//         </div>\r\n//         <div>\r\n//           <label>Experience:</label>\r\n//           <input type=\"text\" placeholder=\"Your experience in public service\" value={experience} onChange={(e) => setExperience(e.target.value)} required />\r\n//         </div>\r\n//         <div>\r\n//           <label>Election Manifesto:</label>\r\n//           <textarea placeholder=\"Write your election manifesto\" value={manifesto} onChange={(e) => setManifesto(e.target.value)} required />\r\n//         </div>\r\n//         <div>\r\n//           <label>Education:</label>\r\n//           <input type=\"text\" placeholder=\"Your highest qualification\" value={education} onChange={(e) => setEducation(e.target.value)} required />\r\n//         </div>\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CandidateDashboard;\r\n\r\n\r\n// // src/components/CandidateDashboard.js\r\n// import React, { useState } from 'react';\r\n\r\n// const CandidateDashboard = () => {\r\n//   const [candidate, setCandidate] = useState({\r\n//     name: '',\r\n//     facilities: '',\r\n//     experience: '',\r\n//     manifesto: '',\r\n//     education: ''\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     setCandidate({ ...candidate, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const token = localStorage.getItem('token');\r\n//       const response = await fetch('/api/candidates', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//           'Authorization': `Bearer ${token}`\r\n//         },\r\n//         body: JSON.stringify(candidate)\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to add candidate');\r\n//       }\r\n\r\n//       alert('Candidate added successfully');\r\n//       setCandidate({\r\n//         name: '',\r\n//         facilities: '',\r\n//         experience: '',\r\n//         manifesto: '',\r\n//         education: ''\r\n//       });\r\n//     } catch (error) {\r\n//       console.error('Error adding candidate:', error);\r\n//       alert('Failed to add candidate');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <h2>Add Candidate</h2>\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"name\"\r\n//         placeholder=\"Name\"\r\n//         value={candidate.name}\r\n//         onChange={handleChange}\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"facilities\"\r\n//         placeholder=\"Facilities\"\r\n//         value={candidate.facilities}\r\n//         onChange={handleChange}\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"experience\"\r\n//         placeholder=\"Experience\"\r\n//         value={candidate.experience}\r\n//         onChange={handleChange}\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"manifesto\"\r\n//         placeholder=\"Manifesto\"\r\n//         value={candidate.manifesto}\r\n//         onChange={handleChange}\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"education\"\r\n//         placeholder=\"Education\"\r\n//         value={candidate.education}\r\n//         onChange={handleChange}\r\n//         required\r\n//       />\r\n//       <button type=\"submit\">Submit</button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default CandidateDashboard;\r\n// src/components/CandidateDashboard.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst CandidateDashboard = () => {\r\n  const [candidate, setCandidate] = useState({\r\n    name: '',\r\n    facilities: '',\r\n    experience: '',\r\n    manifesto: '',\r\n    education: ''\r\n  });\r\n\r\n  const [candidates, setCandidates] = useState([]);\r\n\r\n  // Function to fetch candidates\r\n  const fetchCandidates = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('/api/candidates', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch candidates');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setCandidates(data);\r\n    } catch (error) {\r\n      console.error('Error fetching candidates:', error);\r\n      alert('Failed to load candidates');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCandidates();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setCandidate({ ...candidate, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('/api/candidates', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(candidate)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to add candidate');\r\n      }\r\n\r\n      alert('Candidate added successfully');\r\n      setCandidate({\r\n        name: '',\r\n        facilities: '',\r\n        experience: '',\r\n        manifesto: '',\r\n        education: ''\r\n      });\r\n      \r\n      // Fetch updated candidates after adding a new one\r\n      fetchCandidates();\r\n    } catch (error) {\r\n      console.error('Error adding candidate:', error);\r\n      alert('Failed to add candidate');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <h2>Add Candidate</h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Name\"\r\n          value={candidate.name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"facilities\"\r\n          placeholder=\"Facilities\"\r\n          value={candidate.facilities}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"experience\"\r\n          placeholder=\"Experience\"\r\n          value={candidate.experience}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"manifesto\"\r\n          placeholder=\"Manifesto\"\r\n          value={candidate.manifesto}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"education\"\r\n          placeholder=\"Education\"\r\n          value={candidate.education}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n\r\n      <h2>Candidates List</h2>\r\n      <ul>\r\n        {candidates.map((cand) => (\r\n          <li key={cand._id}>\r\n            {cand.name} - {cand.facilities} - {cand.experience} - {cand.manifesto} - {cand.education}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CandidateDashboard;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}