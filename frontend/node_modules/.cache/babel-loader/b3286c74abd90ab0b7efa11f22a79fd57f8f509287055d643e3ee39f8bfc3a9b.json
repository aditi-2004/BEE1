{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS\\\\VS\\\\frontend\\\\src\\\\App.js\";\n// // src/App.js\n// import React from 'react';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import Login from './components/Login';\n// import AdminDashboard from './components/AdminDashboard';\n// import CandidateDashboard from './components/CandidateDashboard';\n// import VoterDashboard from './components/VoterDashboard';\n\n// const App = () => {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/\" element={<Login />} />\n//         <Route path=\"/admin\" element={<AdminDashboard />} />\n//         <Route path=\"/candidate\" element={<CandidateDashboard />} />\n//         <Route path=\"/voter\" element={<VoterDashboard />} />\n//       </Routes>\n//     </Router>\n//   );\n// };\n\n// export default App;\n\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Login from './components/Login';\nimport AdminDashboard from './components/AdminDashboard';\nimport CandidateDashboard from './components/CandidateDashboard';\nimport VoterDashboard from './components/VoterDashboard';\nimport Results from './components/Results';\n\n// Add this to simulate authentication (replace with actual logic later)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAuthenticated = () => {\n  return localStorage.getItem('token'); // Or any logic to check authentication\n};\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: isAuthenticated() ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 54\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 81\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: isAuthenticated() ? /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 59\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/candidate-dashboard\",\n        element: isAuthenticated() ? /*#__PURE__*/_jsxDEV(CandidateDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 73\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 98\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/voter-dashboard\",\n        element: isAuthenticated() ? /*#__PURE__*/_jsxDEV(VoterDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 69\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 90\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/results\",\n        element: isAuthenticated() ? /*#__PURE__*/_jsxDEV(Results, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 61\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 75\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","Login","AdminDashboard","CandidateDashboard","VoterDashboard","Results","jsxDEV","_jsxDEV","isAuthenticated","localStorage","getItem","App","children","path","element","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/VS/VS/frontend/src/App.js"],"sourcesContent":["// // src/App.js\r\n// import React from 'react';\r\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\n// import Login from './components/Login';\r\n// import AdminDashboard from './components/AdminDashboard';\r\n// import CandidateDashboard from './components/CandidateDashboard';\r\n// import VoterDashboard from './components/VoterDashboard';\r\n\r\n// const App = () => {\r\n//   return (\r\n//     <Router>\r\n//       <Routes>\r\n//         <Route path=\"/\" element={<Login />} />\r\n//         <Route path=\"/admin\" element={<AdminDashboard />} />\r\n//         <Route path=\"/candidate\" element={<CandidateDashboard />} />\r\n//         <Route path=\"/voter\" element={<VoterDashboard />} />\r\n//       </Routes>\r\n//     </Router>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\n\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport Login from './components/Login';\r\nimport AdminDashboard from './components/AdminDashboard';\r\nimport CandidateDashboard from './components/CandidateDashboard';\r\nimport VoterDashboard from './components/VoterDashboard';\r\nimport Results from './components/Results';\r\n\r\n// Add this to simulate authentication (replace with actual logic later)\r\nconst isAuthenticated = () => {\r\n  return localStorage.getItem('token'); // Or any logic to check authentication\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        {/* Default route: If not logged in, redirect to Login */}\r\n        <Route path=\"/\" element={isAuthenticated() ? <Navigate to=\"/admin\" /> : <Login />} />\r\n        \r\n        {/* Admin route, only accessible if authenticated */}\r\n        <Route path=\"/admin\" element={isAuthenticated() ? <AdminDashboard /> : <Navigate to=\"/\" />} />\r\n        \r\n        {/* Candidate Dashboard */}\r\n        <Route path=\"/candidate-dashboard\" element={isAuthenticated() ? <CandidateDashboard /> : <Navigate to=\"/\" />} />\r\n        \r\n        {/* Voter Dashboard */}\r\n        <Route path=\"/voter-dashboard\" element={isAuthenticated() ? <VoterDashboard /> : <Navigate to=\"/\" />} />\r\n        \r\n        {/* Results Page */}\r\n        <Route path=\"/results\" element={isAuthenticated() ? <Results /> : <Navigate to=\"/\" />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}