{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS\\\\VS\\\\frontend\\\\src\\\\components\\\\VoterDashboard.js\",\n  _s = $RefreshSig$();\n// // src/components/VoterDashboard.js\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// const VoterDashboard = () => {\n//   const [candidates, setCandidates] = useState([]);\n//   const [selectedCandidate, setSelectedCandidate] = useState('');\n//   const [voteSubmitted, setVoteSubmitted] = useState(false);\n\n//   useEffect(() => {\n//     const fetchCandidates = async () => {\n//       const res = await axios.get('/api/candidates');\n//       setCandidates(res.data);\n//     };\n//     fetchCandidates();\n//   }, []);\n\n//   const handleVote = async () => {\n//     await axios.post('/api/votes', { candidateId: selectedCandidate });\n//     setVoteSubmitted(true);  // Vote submitted successfully\n//   };\n\n//   return (\n//     <div>\n//       <h1>Voter Dashboard</h1>\n//       <h2>Select a Candidate to Vote</h2>\n//       {voteSubmitted ? (\n//         <p>Thank you for voting!</p>\n//       ) : (\n//         <ul>\n//           {candidates.map(candidate => (\n//             <li key={candidate._id}>\n//               <label>\n//                 <input \n//                   type=\"radio\" \n//                   name=\"candidate\" \n//                   value={candidate._id} \n//                   onChange={(e) => setSelectedCandidate(e.target.value)} \n//                 />\n//                 {candidate.name} - {candidate.facility}\n//               </label>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//       <button onClick={handleVote} disabled={!selectedCandidate || voteSubmitted}>\n//         Vote\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default VoterDashboard;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// const VoterDashboard = () => {\n//   const [candidates, setCandidates] = useState([]);\n//   const [selectedCandidate, setSelectedCandidate] = useState('');\n//   const [voteSubmitted, setVoteSubmitted] = useState(false);\n\n//   useEffect(() => {\n//     const fetchCandidates = async () => {\n//       try {\n//         const res = await axios.get('/api/candidates');\n//         setCandidates(res.data);\n//       } catch (error) {\n//         console.error('Error fetching candidates:', error);\n//       }\n//     };\n//     fetchCandidates();\n//   }, []);\n\n//   const handleVote = async () => {\n//     try {\n//       await axios.post('/api/votes', { voterId: 'YOUR_VOTER_ID', candidateId: selectedCandidate }); // Replace 'YOUR_VOTER_ID' with actual ID\n//       setVoteSubmitted(true);\n//     } catch (error) {\n//       console.error('Error casting vote:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Voter Dashboard</h1>\n//       <h2>Select a Candidate to Vote</h2>\n//       {voteSubmitted ? (\n//         <p>Thank you for voting!</p>\n//       ) : (\n//         <ul>\n//           {candidates.map(candidate => (\n//             <li key={candidate._id}>\n//               <label>\n//                 <input type=\"radio\" name=\"candidate\" value={candidate._id} onChange={(e) => setSelectedCandidate(e.target.value)} />\n//                 {candidate.name} - {candidate.facilities}\n//               </label>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//       <button onClick={handleVote} disabled={!selectedCandidate || voteSubmitted}>Vote</button>\n//     </div>\n//   );\n// };\n\n// export default VoterDashboard;\n\n// src/components/VoterDashboard.js\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoterDashboard = () => {\n  _s();\n  const [candidates, setCandidates] = useState([]);\n  useEffect(() => {\n    const fetchCandidates = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch('/api/vote/candidates', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch candidates');\n        }\n        const data = await response.json();\n        setCandidates(data);\n      } catch (error) {\n        console.error('Error fetching candidates:', error);\n      }\n    };\n    fetchCandidates();\n  }, []);\n  const handleVote = async candidateId => {\n    try {\n      const token = localStorage.getItem('token');\n      const voterId = 'YOUR_VOTER_ID'; // Replace with actual voter ID\n      const response = await fetch('/api/vote/vote', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          voterId,\n          candidateId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to cast vote');\n      }\n      alert('Vote cast successfully');\n    } catch (error) {\n      console.error('Error casting vote:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Voter Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), candidates.map(candidate => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"candidate-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: candidate.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: candidate.facilities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: candidate.experience\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: candidate.manifesto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: candidate.education\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleVote(candidate._id),\n        children: \"Vote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, candidate._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(VoterDashboard, \"W8xvQL2/gnd29ogq8r5xz5rSiCY=\");\n_c = VoterDashboard;\nexport default VoterDashboard;\nvar _c;\n$RefreshReg$(_c, \"VoterDashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","VoterDashboard","_s","candidates","setCandidates","fetchCandidates","token","localStorage","getItem","response","fetch","headers","ok","Error","data","json","error","console","handleVote","candidateId","voterId","method","body","JSON","stringify","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","map","candidate","className","name","facilities","experience","manifesto","education","onClick","_id","_c","$RefreshReg$"],"sources":["D:/VS/VS/frontend/src/components/VoterDashboard.js"],"sourcesContent":["// // src/components/VoterDashboard.js\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const VoterDashboard = () => {\r\n//   const [candidates, setCandidates] = useState([]);\r\n//   const [selectedCandidate, setSelectedCandidate] = useState('');\r\n//   const [voteSubmitted, setVoteSubmitted] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const fetchCandidates = async () => {\r\n//       const res = await axios.get('/api/candidates');\r\n//       setCandidates(res.data);\r\n//     };\r\n//     fetchCandidates();\r\n//   }, []);\r\n\r\n//   const handleVote = async () => {\r\n//     await axios.post('/api/votes', { candidateId: selectedCandidate });\r\n//     setVoteSubmitted(true);  // Vote submitted successfully\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Voter Dashboard</h1>\r\n//       <h2>Select a Candidate to Vote</h2>\r\n//       {voteSubmitted ? (\r\n//         <p>Thank you for voting!</p>\r\n//       ) : (\r\n//         <ul>\r\n//           {candidates.map(candidate => (\r\n//             <li key={candidate._id}>\r\n//               <label>\r\n//                 <input \r\n//                   type=\"radio\" \r\n//                   name=\"candidate\" \r\n//                   value={candidate._id} \r\n//                   onChange={(e) => setSelectedCandidate(e.target.value)} \r\n//                 />\r\n//                 {candidate.name} - {candidate.facility}\r\n//               </label>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       )}\r\n//       <button onClick={handleVote} disabled={!selectedCandidate || voteSubmitted}>\r\n//         Vote\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default VoterDashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const VoterDashboard = () => {\r\n//   const [candidates, setCandidates] = useState([]);\r\n//   const [selectedCandidate, setSelectedCandidate] = useState('');\r\n//   const [voteSubmitted, setVoteSubmitted] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const fetchCandidates = async () => {\r\n//       try {\r\n//         const res = await axios.get('/api/candidates');\r\n//         setCandidates(res.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching candidates:', error);\r\n//       }\r\n//     };\r\n//     fetchCandidates();\r\n//   }, []);\r\n\r\n//   const handleVote = async () => {\r\n//     try {\r\n//       await axios.post('/api/votes', { voterId: 'YOUR_VOTER_ID', candidateId: selectedCandidate }); // Replace 'YOUR_VOTER_ID' with actual ID\r\n//       setVoteSubmitted(true);\r\n//     } catch (error) {\r\n//       console.error('Error casting vote:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Voter Dashboard</h1>\r\n//       <h2>Select a Candidate to Vote</h2>\r\n//       {voteSubmitted ? (\r\n//         <p>Thank you for voting!</p>\r\n//       ) : (\r\n//         <ul>\r\n//           {candidates.map(candidate => (\r\n//             <li key={candidate._id}>\r\n//               <label>\r\n//                 <input type=\"radio\" name=\"candidate\" value={candidate._id} onChange={(e) => setSelectedCandidate(e.target.value)} />\r\n//                 {candidate.name} - {candidate.facilities}\r\n//               </label>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       )}\r\n//       <button onClick={handleVote} disabled={!selectedCandidate || voteSubmitted}>Vote</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default VoterDashboard;\r\n\r\n\r\n\r\n// src/components/VoterDashboard.js\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst VoterDashboard = () => {\r\n  const [candidates, setCandidates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCandidates = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await fetch('/api/vote/candidates', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch candidates');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setCandidates(data);\r\n      } catch (error) {\r\n        console.error('Error fetching candidates:', error);\r\n      }\r\n    };\r\n\r\n    fetchCandidates();\r\n  }, []);\r\n\r\n  const handleVote = async (candidateId) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const voterId = 'YOUR_VOTER_ID'; // Replace with actual voter ID\r\n      const response = await fetch('/api/vote/vote', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ voterId, candidateId })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to cast vote');\r\n      }\r\n\r\n      alert('Vote cast successfully');\r\n    } catch (error) {\r\n      console.error('Error casting vote:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Voter Dashboard</h2>\r\n      {candidates.map(candidate => (\r\n        <div key={candidate._id} className=\"candidate-card\">\r\n          <h3>{candidate.name}</h3>\r\n          <p>{candidate.facilities}</p>\r\n          <p>{candidate.experience}</p>\r\n          <p>{candidate.manifesto}</p>\r\n          <p>{candidate.education}</p>\r\n          <button onClick={() => handleVote(candidate._id)}>Vote</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoterDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}