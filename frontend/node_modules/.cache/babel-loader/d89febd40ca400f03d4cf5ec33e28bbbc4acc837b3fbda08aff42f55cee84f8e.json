{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS\\\\VS\\\\frontend\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\n// // src/components/AdminDashboard.js\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// const AdminDashboard = () => {\n//   const [candidates, setCandidates] = useState([]);\n//   const [voters, setVoters] = useState([]);\n//   const [newCandidate, setNewCandidate] = useState({ name: '', facility: '' });\n//   const [newVoter, setNewVoter] = useState({ name: '', email: '' });\n\n//   useEffect(() => {\n//     const fetchCandidates = async () => {\n//       const res = await axios.get('/api/candidates');\n//       setCandidates(res.data);\n//     };\n\n//     const fetchVoters = async () => {\n//       const res = await axios.get('/api/voters');\n//       setVoters(res.data);\n//     };\n\n//     fetchCandidates();\n//     fetchVoters();\n//   }, []);\n\n//   const handleDeleteCandidate = async (id) => {\n//     await axios.delete(`/api/candidates/${id}`);\n//     setCandidates(candidates.filter(candidate => candidate._id !== id));\n//   };\n\n//   const handleDeleteVoter = async (id) => {\n//     await axios.delete(`/api/voters/${id}`);\n//     setVoters(voters.filter(voter => voter._id !== id));\n//   };\n\n//   const handleAddCandidate = async () => {\n//     await axios.post('/api/candidates', newCandidate);\n//     setCandidates([...candidates, newCandidate]);\n//     setNewCandidate({ name: '', facility: '' });\n//   };\n\n//   const handleAddVoter = async () => {\n//     await axios.post('/api/voters', newVoter);\n//     setVoters([...voters, newVoter]);\n//     setNewVoter({ name: '', email: '' });\n//   };\n\n//   return (\n//     <div>\n//       <h1>Admin Dashboard</h1>\n\n//       <h2>Candidates</h2>\n//       <ul>\n//         {candidates.map(candidate => (\n//           <li key={candidate._id}>\n//             {candidate.name} - {candidate.facility}\n//             <button onClick={() => handleDeleteCandidate(candidate._id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n\n//       <h2>Add Candidate</h2>\n//       <input \n//         type=\"text\" \n//         placeholder=\"Name\" \n//         value={newCandidate.name} \n//         onChange={(e) => setNewCandidate({ ...newCandidate, name: e.target.value })} \n//       />\n//       <input \n//         type=\"text\" \n//         placeholder=\"Facility\" \n//         value={newCandidate.facility} \n//         onChange={(e) => setNewCandidate({ ...newCandidate, facility: e.target.value })} \n//       />\n//       <button onClick={handleAddCandidate}>Add Candidate</button>\n\n//       <h2>Voters</h2>\n//       <ul>\n//         {voters.map(voter => (\n//           <li key={voter._id}>\n//             {voter.name} - {voter.email}\n//             <button onClick={() => handleDeleteVoter(voter._id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n\n//       <h2>Add Voter</h2>\n//       <input \n//         type=\"text\" \n//         placeholder=\"Name\" \n//         value={newVoter.name} \n//         onChange={(e) => setNewVoter({ ...newVoter, name: e.target.value })} \n//       />\n//       <input \n//         type=\"email\" \n//         placeholder=\"Email\" \n//         value={newVoter.email} \n//         onChange={(e) => setNewVoter({ ...newVoter, email: e.target.value })} \n//       />\n//       <button onClick={handleAddVoter}>Add Voter</button>\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;\n\n// // src/components/AdminDashboard.js\n// import React, { useEffect, useState } from 'react';\n// import { Chart } from 'react-google-charts'; // Assuming you are using Google Charts\n\n// const AdminDashboard = () => {\n//   const [candidates, setCandidates] = useState([]);\n//   const [voters, setVoters] = useState([]);\n//   const [results, setResults] = useState([]);\n\n//   useEffect(() => {\n//     const fetchCandidates = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const response = await fetch('/api/candidates', {\n//           headers: {\n//             'Authorization': `Bearer ${token}`\n//           }\n//         });\n\n//         if (!response.ok) {\n//           throw new Error('Failed to fetch candidates');\n//         }\n\n//         const data = await response.json();\n//         setCandidates(data);\n//       } catch (error) {\n//         console.error('Error fetching candidates:', error);\n//       }\n//     };\n\n//     const fetchVoters = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const response = await fetch('/api/voters', {\n//           headers: {\n//             'Authorization': `Bearer ${token}`\n//           }\n//         });\n\n//         if (!response.ok) {\n//           throw new Error('Failed to fetch voters');\n//         }\n\n//         const data = await response.json();\n//         setVoters(data);\n//       } catch (error) {\n//         console.error('Error fetching voters:', error);\n//       }\n//     };\n\n//     const fetchResults = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const response = await fetch('/api/results', {\n//           headers: {\n//             'Authorization': `Bearer ${token}`\n//           }\n//         });\n\n//         if (!response.ok) {\n//           throw new Error('Failed to fetch results');\n//         }\n\n//         const data = await response.json();\n//         setResults(data);\n//       } catch (error) {\n//         console.error('Error fetching results:', error);\n//       }\n//     };\n\n//     fetchCandidates();\n//     fetchVoters();\n//     fetchResults();\n//   }, []);\n\n//   return (\n//     <div>\n//       <h1>Admin Dashboard</h1>\n\n//       <h2>Candidates</h2>\n//       <ul>\n//         {candidates.map(candidate => (\n//           <li key={candidate._id}>\n//             {candidate.name} - {candidate.facilities}\n//             <button onClick={() => handleDeleteCandidate(candidate._id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n\n//       <h2>Voters</h2>\n//       <ul>\n//         {voters.map(voter => (\n//           <li key={voter._id}>\n//             {voter.name} - {voter.email}\n//             <button onClick={() => handleDeleteVoter(voter._id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n\n//       <h2>Results</h2>\n//       <Chart\n//         chartType=\"PieChart\"\n//         data={[\n//           ['Candidate', 'Votes'],\n//           ...results.map(result => [result.name, result.votes])\n//         ]}\n//         width=\"100%\"\n//         height=\"400px\"\n//         legendToggle\n//       />\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;\n\n// // src/components/AdminDashboard.js\n// import React, { useEffect, useState } from 'react';\n\n// const AdminDashboard = () => {\n//   const [candidates, setCandidates] = useState([]);\n//   const [voters, setVoters] = useState([]);\n\n//   useEffect(() => {\n//     const fetchCandidates = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const response = await fetch('/api/candidates', {\n//           headers: {\n//             'Authorization': `Bearer ${token}`\n//           }\n//         });\n//         const data = await response.json();\n//         setCandidates(data);\n//       } catch (error) {\n//         console.error('Error fetching candidates:', error);\n//       }\n//     };\n\n//     const fetchVoters = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const response = await fetch('/api/voters', {\n//           headers: {\n//             'Authorization': `Bearer ${token}`\n//           }\n//         });\n//         const data = await response.json();\n//         setVoters(data);\n//       } catch (error) {\n//         console.error('Error fetching voters:', error);\n//       }\n//     };\n\n//     fetchCandidates();\n//     fetchVoters();\n//   }, []);\n\n//   return (\n//     <div>\n//       <h1>Admin Dashboard</h1>\n\n//       <h2>Candidates</h2>\n//       <ul>\n//         {candidates.map(candidate => (\n//           <li key={candidate._id}>\n//             {candidate.name} - {candidate.facilities} - {candidate.experience} - {candidate.manifesto} - {candidate.education} - Votes: {candidate.votes}\n//           </li>\n//         ))}\n//       </ul>\n\n//       <h2>Voters</h2>\n//       <ul>\n//         {voters.map(voter => (\n//           <li key={voter._id}>\n//             {voter.name} - {voter.email}\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;\n\n// src/components/AdminDashboard.js\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [candidates, setCandidates] = useState([]);\n  const [voters, setVoters] = useState([]);\n  useEffect(() => {\n    const fetchCandidates = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch('/api/candidates', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        setCandidates(data);\n      } catch (error) {\n        console.error('Error fetching candidates:', error);\n      }\n    };\n    const fetchVoters = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch('/api/voters', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        setVoters(data);\n      } catch (error) {\n        console.error('Error fetching voters:', error);\n      }\n    };\n    fetchCandidates();\n    fetchVoters();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Candidates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: candidates.map(candidate => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [candidate.name, \" - \", candidate.facilities, \" - \", candidate.experience, \" - \", candidate.manifesto, \" - \", candidate.education, \" - Votes: \", candidate.votes]\n      }, candidate._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Voters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: voters.map(voter => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [voter.name, \" - \", voter.email, \" - Voted: \", voter.hasVoted ? 'Yes' : 'No']\n      }, voter._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"Oa4FxGZvCIgoGZJxqZDPo73zgt4=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AdminDashboard","_s","candidates","setCandidates","voters","setVoters","fetchCandidates","token","localStorage","getItem","response","fetch","headers","data","json","error","console","fetchVoters","children","fileName","_jsxFileName","lineNumber","columnNumber","map","candidate","name","facilities","experience","manifesto","education","votes","_id","voter","email","hasVoted","_c","$RefreshReg$"],"sources":["D:/VS/VS/frontend/src/components/AdminDashboard.js"],"sourcesContent":["// // src/components/AdminDashboard.js\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const AdminDashboard = () => {\r\n//   const [candidates, setCandidates] = useState([]);\r\n//   const [voters, setVoters] = useState([]);\r\n//   const [newCandidate, setNewCandidate] = useState({ name: '', facility: '' });\r\n//   const [newVoter, setNewVoter] = useState({ name: '', email: '' });\r\n\r\n//   useEffect(() => {\r\n//     const fetchCandidates = async () => {\r\n//       const res = await axios.get('/api/candidates');\r\n//       setCandidates(res.data);\r\n//     };\r\n    \r\n//     const fetchVoters = async () => {\r\n//       const res = await axios.get('/api/voters');\r\n//       setVoters(res.data);\r\n//     };\r\n\r\n//     fetchCandidates();\r\n//     fetchVoters();\r\n//   }, []);\r\n\r\n//   const handleDeleteCandidate = async (id) => {\r\n//     await axios.delete(`/api/candidates/${id}`);\r\n//     setCandidates(candidates.filter(candidate => candidate._id !== id));\r\n//   };\r\n\r\n//   const handleDeleteVoter = async (id) => {\r\n//     await axios.delete(`/api/voters/${id}`);\r\n//     setVoters(voters.filter(voter => voter._id !== id));\r\n//   };\r\n\r\n//   const handleAddCandidate = async () => {\r\n//     await axios.post('/api/candidates', newCandidate);\r\n//     setCandidates([...candidates, newCandidate]);\r\n//     setNewCandidate({ name: '', facility: '' });\r\n//   };\r\n\r\n//   const handleAddVoter = async () => {\r\n//     await axios.post('/api/voters', newVoter);\r\n//     setVoters([...voters, newVoter]);\r\n//     setNewVoter({ name: '', email: '' });\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Admin Dashboard</h1>\r\n      \r\n//       <h2>Candidates</h2>\r\n//       <ul>\r\n//         {candidates.map(candidate => (\r\n//           <li key={candidate._id}>\r\n//             {candidate.name} - {candidate.facility}\r\n//             <button onClick={() => handleDeleteCandidate(candidate._id)}>Delete</button>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n      \r\n//       <h2>Add Candidate</h2>\r\n//       <input \r\n//         type=\"text\" \r\n//         placeholder=\"Name\" \r\n//         value={newCandidate.name} \r\n//         onChange={(e) => setNewCandidate({ ...newCandidate, name: e.target.value })} \r\n//       />\r\n//       <input \r\n//         type=\"text\" \r\n//         placeholder=\"Facility\" \r\n//         value={newCandidate.facility} \r\n//         onChange={(e) => setNewCandidate({ ...newCandidate, facility: e.target.value })} \r\n//       />\r\n//       <button onClick={handleAddCandidate}>Add Candidate</button>\r\n\r\n//       <h2>Voters</h2>\r\n//       <ul>\r\n//         {voters.map(voter => (\r\n//           <li key={voter._id}>\r\n//             {voter.name} - {voter.email}\r\n//             <button onClick={() => handleDeleteVoter(voter._id)}>Delete</button>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       <h2>Add Voter</h2>\r\n//       <input \r\n//         type=\"text\" \r\n//         placeholder=\"Name\" \r\n//         value={newVoter.name} \r\n//         onChange={(e) => setNewVoter({ ...newVoter, name: e.target.value })} \r\n//       />\r\n//       <input \r\n//         type=\"email\" \r\n//         placeholder=\"Email\" \r\n//         value={newVoter.email} \r\n//         onChange={(e) => setNewVoter({ ...newVoter, email: e.target.value })} \r\n//       />\r\n//       <button onClick={handleAddVoter}>Add Voter</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AdminDashboard;\r\n\r\n// // src/components/AdminDashboard.js\r\n// import React, { useEffect, useState } from 'react';\r\n// import { Chart } from 'react-google-charts'; // Assuming you are using Google Charts\r\n\r\n// const AdminDashboard = () => {\r\n//   const [candidates, setCandidates] = useState([]);\r\n//   const [voters, setVoters] = useState([]);\r\n//   const [results, setResults] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchCandidates = async () => {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         const response = await fetch('/api/candidates', {\r\n//           headers: {\r\n//             'Authorization': `Bearer ${token}`\r\n//           }\r\n//         });\r\n\r\n//         if (!response.ok) {\r\n//           throw new Error('Failed to fetch candidates');\r\n//         }\r\n\r\n//         const data = await response.json();\r\n//         setCandidates(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching candidates:', error);\r\n//       }\r\n//     };\r\n\r\n//     const fetchVoters = async () => {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         const response = await fetch('/api/voters', {\r\n//           headers: {\r\n//             'Authorization': `Bearer ${token}`\r\n//           }\r\n//         });\r\n\r\n//         if (!response.ok) {\r\n//           throw new Error('Failed to fetch voters');\r\n//         }\r\n\r\n//         const data = await response.json();\r\n//         setVoters(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching voters:', error);\r\n//       }\r\n//     };\r\n\r\n//     const fetchResults = async () => {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         const response = await fetch('/api/results', {\r\n//           headers: {\r\n//             'Authorization': `Bearer ${token}`\r\n//           }\r\n//         });\r\n\r\n//         if (!response.ok) {\r\n//           throw new Error('Failed to fetch results');\r\n//         }\r\n\r\n//         const data = await response.json();\r\n//         setResults(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching results:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchCandidates();\r\n//     fetchVoters();\r\n//     fetchResults();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Admin Dashboard</h1>\r\n      \r\n//       <h2>Candidates</h2>\r\n//       <ul>\r\n//         {candidates.map(candidate => (\r\n//           <li key={candidate._id}>\r\n//             {candidate.name} - {candidate.facilities}\r\n//             <button onClick={() => handleDeleteCandidate(candidate._id)}>Delete</button>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       <h2>Voters</h2>\r\n//       <ul>\r\n//         {voters.map(voter => (\r\n//           <li key={voter._id}>\r\n//             {voter.name} - {voter.email}\r\n//             <button onClick={() => handleDeleteVoter(voter._id)}>Delete</button>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       <h2>Results</h2>\r\n//       <Chart\r\n//         chartType=\"PieChart\"\r\n//         data={[\r\n//           ['Candidate', 'Votes'],\r\n//           ...results.map(result => [result.name, result.votes])\r\n//         ]}\r\n//         width=\"100%\"\r\n//         height=\"400px\"\r\n//         legendToggle\r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AdminDashboard;\r\n\r\n\r\n// // src/components/AdminDashboard.js\r\n// import React, { useEffect, useState } from 'react';\r\n\r\n// const AdminDashboard = () => {\r\n//   const [candidates, setCandidates] = useState([]);\r\n//   const [voters, setVoters] = useState([]);\r\n  \r\n//   useEffect(() => {\r\n//     const fetchCandidates = async () => {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         const response = await fetch('/api/candidates', {\r\n//           headers: {\r\n//             'Authorization': `Bearer ${token}`\r\n//           }\r\n//         });\r\n//         const data = await response.json();\r\n//         setCandidates(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching candidates:', error);\r\n//       }\r\n//     };\r\n\r\n//     const fetchVoters = async () => {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         const response = await fetch('/api/voters', {\r\n//           headers: {\r\n//             'Authorization': `Bearer ${token}`\r\n//           }\r\n//         });\r\n//         const data = await response.json();\r\n//         setVoters(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching voters:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchCandidates();\r\n//     fetchVoters();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Admin Dashboard</h1>\r\n\r\n//       <h2>Candidates</h2>\r\n//       <ul>\r\n//         {candidates.map(candidate => (\r\n//           <li key={candidate._id}>\r\n//             {candidate.name} - {candidate.facilities} - {candidate.experience} - {candidate.manifesto} - {candidate.education} - Votes: {candidate.votes}\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       <h2>Voters</h2>\r\n//       <ul>\r\n//         {voters.map(voter => (\r\n//           <li key={voter._id}>\r\n//             {voter.name} - {voter.email}\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AdminDashboard;\r\n\r\n\r\n// src/components/AdminDashboard.js\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst AdminDashboard = () => {\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [voters, setVoters] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    const fetchCandidates = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await fetch('/api/candidates', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        const data = await response.json();\r\n        setCandidates(data);\r\n      } catch (error) {\r\n        console.error('Error fetching candidates:', error);\r\n      }\r\n    };\r\n\r\n    const fetchVoters = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await fetch('/api/voters', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        const data = await response.json();\r\n        setVoters(data);\r\n      } catch (error) {\r\n        console.error('Error fetching voters:', error);\r\n      }\r\n    };\r\n\r\n    fetchCandidates();\r\n    fetchVoters();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Admin Dashboard</h1>\r\n\r\n      <h2>Candidates</h2>\r\n      <ul>\r\n        {candidates.map(candidate => (\r\n          <li key={candidate._id}>\r\n            {candidate.name} - {candidate.facilities} - {candidate.experience} - {candidate.manifesto} - {candidate.education} - Votes: {candidate.votes}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h2>Voters</h2>\r\n      <ul>\r\n        {voters.map(voter => (\r\n          <li key={voter._id}>\r\n            {voter.name} - {voter.email} - Voted: {voter.hasVoted ? 'Yes' : 'No'}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}