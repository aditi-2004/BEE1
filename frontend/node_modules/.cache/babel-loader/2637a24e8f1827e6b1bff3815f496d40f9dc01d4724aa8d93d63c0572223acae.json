{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS\\\\VS\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// // src/components/Login.js\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await fetch('http://localhost:5000/api/auth/login', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({ email, password })\n//       });\n\n//       const data = await response.json();\n//       if (response.ok) {\n//         localStorage.setItem('token', data.token);\n//         navigate('/dashboard'); // Redirect to dashboard\n//       } else {\n//         console.error('Login response error:', data.message);\n//         setError(data.message); // Display error message from backend\n//       }\n//     } catch (error) {\n//       console.error('Error:', error);\n//       setError('An error occurred. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleLogin}>\n//       <h2>Login</h2>\n//       <label>\n//         Email:\n//         <input\n//           type=\"email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n//       </label>\n//       <br />\n//       <label>\n//         Password:\n//         <input\n//           type=\"password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n//       </label>\n//       <br />\n//       <button type=\"submit\">Login</button>\n//       {error && <p>{error}</p>}\n//     </form>\n//   );\n// };\n\n// export default Login;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [role, setRole] = useState('admin'); // Default to 'admin' or allow selection\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post(`http://localhost:5000/api/auth/login/${role}`, {\n//         email,\n//         password\n//       });\n\n//       const { token } = response.data;\n//       localStorage.setItem('token', token); // Store token in local storage\n\n//       // Redirect based on role\n//       if (role === 'admin') {\n//         navigate('/admin');\n//       } else if (role === 'candidate') {\n//         navigate('/candidate');\n//       } else if (role === 'voter') {\n//         navigate('/voter');\n//       }\n//     } catch (error) {\n//       console.error('Login error:', error.response?.data?.message || error.message);\n//       // Handle error (e.g., display an error message to the user)\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           placeholder=\"Email\"\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           placeholder=\"Password\"\n//           required\n//         />\n//         <select value={role} onChange={(e) => setRole(e.target.value)} required>\n//           <option value=\"admin\">Admin</option>\n//           <option value=\"candidate\">Candidate</option>\n//           <option value=\"voter\">Voter</option>\n//         </select>\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('voter'); // Default role is 'voter'\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password,\n          role\n        }) // Include role in the request body\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('token', data.token);\n\n        // Redirect based on the selected role\n        if (role === 'admin') {\n          navigate('/admin'); // Redirect to Admin dashboard\n        } else if (role === 'candidate') {\n          navigate('/candidate'); // Redirect to Candidate dashboard\n        } else if (role === 'voter') {\n          navigate('/voter'); // Redirect to Voter dashboard\n        }\n      } else {\n        console.error('Login response error:', data.message);\n        setError(data.message); // Display error message from backend\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Role:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: role,\n        onChange: e => setRole(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"admin\",\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"voter\",\n          children: \"Voter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"candidate\",\n          children: \"Candidate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"m1anqW+wZ/L4jED/ABJBK+O1adA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","role","setRole","error","setError","navigate","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","console","message","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/VS/VS/frontend/src/components/Login.js"],"sourcesContent":["// // src/components/Login.js\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const Login = () => {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/auth/login', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json'\r\n//         },\r\n//         body: JSON.stringify({ email, password })\r\n//       });\r\n\r\n//       const data = await response.json();\r\n//       if (response.ok) {\r\n//         localStorage.setItem('token', data.token);\r\n//         navigate('/dashboard'); // Redirect to dashboard\r\n//       } else {\r\n//         console.error('Login response error:', data.message);\r\n//         setError(data.message); // Display error message from backend\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error:', error);\r\n//       setError('An error occurred. Please try again.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleLogin}>\r\n//       <h2>Login</h2>\r\n//       <label>\r\n//         Email:\r\n//         <input\r\n//           type=\"email\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           required\r\n//         />\r\n//       </label>\r\n//       <br />\r\n//       <label>\r\n//         Password:\r\n//         <input\r\n//           type=\"password\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           required\r\n//         />\r\n//       </label>\r\n//       <br />\r\n//       <button type=\"submit\">Login</button>\r\n//       {error && <p>{error}</p>}\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const Login = () => {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [role, setRole] = useState('admin'); // Default to 'admin' or allow selection\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       const response = await axios.post(`http://localhost:5000/api/auth/login/${role}`, {\r\n//         email,\r\n//         password\r\n//       });\r\n\r\n//       const { token } = response.data;\r\n//       localStorage.setItem('token', token); // Store token in local storage\r\n\r\n//       // Redirect based on role\r\n//       if (role === 'admin') {\r\n//         navigate('/admin');\r\n//       } else if (role === 'candidate') {\r\n//         navigate('/candidate');\r\n//       } else if (role === 'voter') {\r\n//         navigate('/voter');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Login error:', error.response?.data?.message || error.message);\r\n//       // Handle error (e.g., display an error message to the user)\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Login</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input\r\n//           type=\"email\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           placeholder=\"Email\"\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           placeholder=\"Password\"\r\n//           required\r\n//         />\r\n//         <select value={role} onChange={(e) => setRole(e.target.value)} required>\r\n//           <option value=\"admin\">Admin</option>\r\n//           <option value=\"candidate\">Candidate</option>\r\n//           <option value=\"voter\">Voter</option>\r\n//         </select>\r\n//         <button type=\"submit\">Login</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [role, setRole] = useState('voter'); // Default role is 'voter'\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ email, password, role }) // Include role in the request body\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        localStorage.setItem('token', data.token);\r\n\r\n        // Redirect based on the selected role\r\n        if (role === 'admin') {\r\n          navigate('/admin');  // Redirect to Admin dashboard\r\n        } else if (role === 'candidate') {\r\n          navigate('/candidate');  // Redirect to Candidate dashboard\r\n        } else if (role === 'voter') {\r\n          navigate('/voter');  // Redirect to Voter dashboard\r\n        }\r\n      } else {\r\n        console.error('Login response error:', data.message);\r\n        setError(data.message); // Display error message from backend\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError('An error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleLogin}>\r\n      <h2>Login</h2>\r\n      <label>\r\n        Email:\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Password:\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Role:\r\n        <select value={role} onChange={(e) => setRole(e.target.value)}>\r\n          <option value=\"admin\">Admin</option>\r\n          <option value=\"voter\">Voter</option>\r\n          <option value=\"candidate\">Candidate</option>\r\n        </select>\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\">Login</button>\r\n      {error && <p>{error}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}