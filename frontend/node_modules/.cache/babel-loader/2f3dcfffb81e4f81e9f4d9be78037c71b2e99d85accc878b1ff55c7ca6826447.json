{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS\\\\VS\\\\frontend\\\\src\\\\components\\\\CandidateDashboard.js\",\n  _s = $RefreshSig$();\n// // src/components/CandidateDashboard.js\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const CandidateDashboard = () => {\n//   const [name, setName] = useState('');\n//   const [facility, setFacility] = useState('');\n//   const [experience, setExperience] = useState(''); // Candidate's experience\n//   const [manifesto, setManifesto] = useState(''); // Candidate's election manifesto\n//   const [education, setEducation] = useState(''); // Candidate's education\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const newCandidate = { name, facility, experience, manifesto, education };\n//     await axios.post('/api/candidates', newCandidate);\n//     // Optionally, reset the form or show a success message\n//     setName('');\n//     setFacility('');\n//     setExperience('');\n//     setManifesto('');\n//     setEducation('');\n//   };\n\n//   return (\n//     <div>\n//       <h1>Candidate Dashboard</h1>\n//       <form onSubmit={handleSubmit}>\n//         {/* Name Input */}\n//         <div>\n//           <label>Name:</label>\n//           <input \n//             type=\"text\" \n//             placeholder=\"Your Name\" \n//             value={name} \n//             onChange={(e) => setName(e.target.value)} \n//             required \n//           />\n//         </div>\n\n//         {/* Facilities Input */}\n//         <div>\n//           <label>Facilities:</label>\n//           <input \n//             type=\"text\" \n//             placeholder=\"Facilities you provide\" \n//             value={facility} \n//             onChange={(e) => setFacility(e.target.value)} \n//             required \n//           />\n//         </div>\n\n//         {/* Experience Input */}\n//         <div>\n//           <label>Experience:</label>\n//           <input \n//             type=\"text\" \n//             placeholder=\"Your experience in public service\" \n//             value={experience} \n//             onChange={(e) => setExperience(e.target.value)} \n//             required \n//           />\n//         </div>\n\n//         {/* Manifesto Input */}\n//         <div>\n//           <label>Election Manifesto:</label>\n//           <textarea\n//             placeholder=\"Write your election manifesto\"\n//             value={manifesto}\n//             onChange={(e) => setManifesto(e.target.value)}\n//             required\n//           />\n//         </div>\n\n//         {/* Education Input */}\n//         <div>\n//           <label>Education:</label>\n//           <input \n//             type=\"text\" \n//             placeholder=\"Your highest qualification\" \n//             value={education} \n//             onChange={(e) => setEducation(e.target.value)} \n//             required \n//           />\n//         </div>\n\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default CandidateDashboard;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const CandidateDashboard = () => {\n//   const [name, setName] = useState('');\n//   const [facility, setFacility] = useState('');\n//   const [experience, setExperience] = useState('');\n//   const [manifesto, setManifesto] = useState('');\n//   const [education, setEducation] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const newCandidate = { name, facilities: facility, experience, manifesto, education };\n//     try {\n//       await axios.post('/api/candidates', newCandidate);\n//       setName('');\n//       setFacility('');\n//       setExperience('');\n//       setManifesto('');\n//       setEducation('');\n//       alert('Candidate added successfully');\n//     } catch (error) {\n//       console.error('Error adding candidate:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Candidate Dashboard</h1>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>Name:</label>\n//           <input type=\"text\" placeholder=\"Your Name\" value={name} onChange={(e) => setName(e.target.value)} required />\n//         </div>\n//         <div>\n//           <label>Facilities:</label>\n//           <input type=\"text\" placeholder=\"Facilities you provide\" value={facility} onChange={(e) => setFacility(e.target.value)} required />\n//         </div>\n//         <div>\n//           <label>Experience:</label>\n//           <input type=\"text\" placeholder=\"Your experience in public service\" value={experience} onChange={(e) => setExperience(e.target.value)} required />\n//         </div>\n//         <div>\n//           <label>Election Manifesto:</label>\n//           <textarea placeholder=\"Write your election manifesto\" value={manifesto} onChange={(e) => setManifesto(e.target.value)} required />\n//         </div>\n//         <div>\n//           <label>Education:</label>\n//           <input type=\"text\" placeholder=\"Your highest qualification\" value={education} onChange={(e) => setEducation(e.target.value)} required />\n//         </div>\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default CandidateDashboard;\n\n// // src/components/CandidateDashboard.js\n// import React, { useState } from 'react';\n\n// const CandidateDashboard = () => {\n//   const [candidate, setCandidate] = useState({\n//     name: '',\n//     facilities: '',\n//     experience: '',\n//     manifesto: '',\n//     education: ''\n//   });\n\n//   const handleChange = (e) => {\n//     setCandidate({ ...candidate, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const token = localStorage.getItem('token');\n//       const response = await fetch('/api/candidates', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//           'Authorization': `Bearer ${token}`\n//         },\n//         body: JSON.stringify(candidate)\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to add candidate');\n//       }\n\n//       alert('Candidate added successfully');\n//       setCandidate({\n//         name: '',\n//         facilities: '',\n//         experience: '',\n//         manifesto: '',\n//         education: ''\n//       });\n//     } catch (error) {\n//       console.error('Error adding candidate:', error);\n//       alert('Failed to add candidate');\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <h2>Add Candidate</h2>\n//       <input\n//         type=\"text\"\n//         name=\"name\"\n//         placeholder=\"Name\"\n//         value={candidate.name}\n//         onChange={handleChange}\n//         required\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"facilities\"\n//         placeholder=\"Facilities\"\n//         value={candidate.facilities}\n//         onChange={handleChange}\n//         required\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"experience\"\n//         placeholder=\"Experience\"\n//         value={candidate.experience}\n//         onChange={handleChange}\n//         required\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"manifesto\"\n//         placeholder=\"Manifesto\"\n//         value={candidate.manifesto}\n//         onChange={handleChange}\n//         required\n//       />\n//       <input\n//         type=\"text\"\n//         name=\"education\"\n//         placeholder=\"Education\"\n//         value={candidate.education}\n//         onChange={handleChange}\n//         required\n//       />\n//       <button type=\"submit\">Submit</button>\n//     </form>\n//   );\n// };\n\n// export default CandidateDashboard;\n// src/components/CandidateDashboard.js\n\n// import React, { useState, useEffect } from 'react';\n\n// const CandidateDashboard = () => {\n//   const [candidate, setCandidate] = useState({\n//     name: '',\n//     facilities: '',\n//     experience: '',\n//     manifesto: '',\n//     education: ''\n//   });\n\n//   const [candidates, setCandidates] = useState([]);\n\n//   // Function to fetch candidates\n//   const fetchCandidates = async () => {\n//     try {\n//       const token = localStorage.getItem('token');\n//       const response = await fetch('/api/candidates', {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch candidates');\n//       }\n\n//       const data = await response.json();\n//       setCandidates(data);\n//     } catch (error) {\n//       console.error('Error fetching candidates:', error);\n//       alert('Failed to load candidates');\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchCandidates();\n//   }, []);\n\n//   const handleChange = (e) => {\n//     setCandidate({ ...candidate, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const token = localStorage.getItem('token');\n//       const response = await fetch('/api/candidates', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//           'Authorization': `Bearer ${token}`\n//         },\n//         body: JSON.stringify(candidate)\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to add candidate');\n//       }\n\n//       alert('Candidate added successfully');\n//       setCandidate({\n//         name: '',\n//         facilities: '',\n//         experience: '',\n//         manifesto: '',\n//         education: ''\n//       });\n\n//       // Fetch updated candidates after adding a new one\n//       fetchCandidates();\n//     } catch (error) {\n//       console.error('Error adding candidate:', error);\n//       alert('Failed to add candidate');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n//         <h2>Add Candidate</h2>\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           placeholder=\"Name\"\n//           value={candidate.name}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"facilities\"\n//           placeholder=\"Facilities\"\n//           value={candidate.facilities}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"experience\"\n//           placeholder=\"Experience\"\n//           value={candidate.experience}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"manifesto\"\n//           placeholder=\"Manifesto\"\n//           value={candidate.manifesto}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"education\"\n//           placeholder=\"Education\"\n//           value={candidate.education}\n//           onChange={handleChange}\n//           required\n//         />\n//         <button type=\"submit\">Submit</button>\n//       </form>\n\n//       <h2>Candidates List</h2>\n//       <ul>\n//         {candidates.map((cand) => (\n//           <li key={cand._id}>\n//             {cand.name} - {cand.facilities} - {cand.experience} - {cand.manifesto} - {cand.education}\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default CandidateDashboard;\n\nimport React, { useState, useEffect } from 'react';\nimport './CandidateDashboard.css'; // For styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CandidateDashboard = () => {\n  _s();\n  const [candidate, setCandidate] = useState({\n    name: '',\n    facilities: '',\n    experience: '',\n    manifesto: '',\n    education: ''\n  });\n  const [candidates, setCandidates] = useState([]);\n  const fetchCandidates = async () => {\n    const token = localStorage.getItem('token');\n    const response = await fetch('/api/candidates', {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    setCandidates(data);\n  };\n  useEffect(() => {\n    fetchCandidates();\n  }, []);\n  const handleChange = e => {\n    setCandidate({\n      ...candidate,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    await fetch('/api/candidates', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(candidate)\n    });\n    alert('Candidate added successfully');\n    setCandidate({\n      name: '',\n      facilities: '',\n      experience: '',\n      manifesto: '',\n      education: ''\n    });\n    fetchCandidates();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"candidate-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Candidate Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        value: candidate.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Facilities:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"facilities\",\n        value: candidate.facilities,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Experience:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"experience\",\n        value: candidate.experience,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Manifesto:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"manifesto\",\n        value: candidate.manifesto,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Education:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"education\",\n        value: candidate.education,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 444,\n    columnNumber: 5\n  }, this);\n};\n_s(CandidateDashboard, \"6J8rVJNJzJcJoaHmqWqoxhpnOaA=\");\n_c = CandidateDashboard;\nexport default CandidateDashboard;\nvar _c;\n$RefreshReg$(_c, \"CandidateDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CandidateDashboard","_s","candidate","setCandidate","name","facilities","experience","manifesto","education","candidates","setCandidates","fetchCandidates","token","localStorage","getItem","response","fetch","headers","data","json","handleChange","e","target","value","handleSubmit","preventDefault","method","body","JSON","stringify","alert","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onChange","required","type","_c","$RefreshReg$"],"sources":["D:/VS/VS/frontend/src/components/CandidateDashboard.js"],"sourcesContent":["// // src/components/CandidateDashboard.js\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const CandidateDashboard = () => {\r\n//   const [name, setName] = useState('');\r\n//   const [facility, setFacility] = useState('');\r\n//   const [experience, setExperience] = useState(''); // Candidate's experience\r\n//   const [manifesto, setManifesto] = useState(''); // Candidate's election manifesto\r\n//   const [education, setEducation] = useState(''); // Candidate's education\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const newCandidate = { name, facility, experience, manifesto, education };\r\n//     await axios.post('/api/candidates', newCandidate);\r\n//     // Optionally, reset the form or show a success message\r\n//     setName('');\r\n//     setFacility('');\r\n//     setExperience('');\r\n//     setManifesto('');\r\n//     setEducation('');\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Candidate Dashboard</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         {/* Name Input */}\r\n//         <div>\r\n//           <label>Name:</label>\r\n//           <input \r\n//             type=\"text\" \r\n//             placeholder=\"Your Name\" \r\n//             value={name} \r\n//             onChange={(e) => setName(e.target.value)} \r\n//             required \r\n//           />\r\n//         </div>\r\n\r\n//         {/* Facilities Input */}\r\n//         <div>\r\n//           <label>Facilities:</label>\r\n//           <input \r\n//             type=\"text\" \r\n//             placeholder=\"Facilities you provide\" \r\n//             value={facility} \r\n//             onChange={(e) => setFacility(e.target.value)} \r\n//             required \r\n//           />\r\n//         </div>\r\n\r\n//         {/* Experience Input */}\r\n//         <div>\r\n//           <label>Experience:</label>\r\n//           <input \r\n//             type=\"text\" \r\n//             placeholder=\"Your experience in public service\" \r\n//             value={experience} \r\n//             onChange={(e) => setExperience(e.target.value)} \r\n//             required \r\n//           />\r\n//         </div>\r\n\r\n//         {/* Manifesto Input */}\r\n//         <div>\r\n//           <label>Election Manifesto:</label>\r\n//           <textarea\r\n//             placeholder=\"Write your election manifesto\"\r\n//             value={manifesto}\r\n//             onChange={(e) => setManifesto(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Education Input */}\r\n//         <div>\r\n//           <label>Education:</label>\r\n//           <input \r\n//             type=\"text\" \r\n//             placeholder=\"Your highest qualification\" \r\n//             value={education} \r\n//             onChange={(e) => setEducation(e.target.value)} \r\n//             required \r\n//           />\r\n//         </div>\r\n\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CandidateDashboard;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const CandidateDashboard = () => {\r\n//   const [name, setName] = useState('');\r\n//   const [facility, setFacility] = useState('');\r\n//   const [experience, setExperience] = useState('');\r\n//   const [manifesto, setManifesto] = useState('');\r\n//   const [education, setEducation] = useState('');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const newCandidate = { name, facilities: facility, experience, manifesto, education };\r\n//     try {\r\n//       await axios.post('/api/candidates', newCandidate);\r\n//       setName('');\r\n//       setFacility('');\r\n//       setExperience('');\r\n//       setManifesto('');\r\n//       setEducation('');\r\n//       alert('Candidate added successfully');\r\n//     } catch (error) {\r\n//       console.error('Error adding candidate:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Candidate Dashboard</h1>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label>Name:</label>\r\n//           <input type=\"text\" placeholder=\"Your Name\" value={name} onChange={(e) => setName(e.target.value)} required />\r\n//         </div>\r\n//         <div>\r\n//           <label>Facilities:</label>\r\n//           <input type=\"text\" placeholder=\"Facilities you provide\" value={facility} onChange={(e) => setFacility(e.target.value)} required />\r\n//         </div>\r\n//         <div>\r\n//           <label>Experience:</label>\r\n//           <input type=\"text\" placeholder=\"Your experience in public service\" value={experience} onChange={(e) => setExperience(e.target.value)} required />\r\n//         </div>\r\n//         <div>\r\n//           <label>Election Manifesto:</label>\r\n//           <textarea placeholder=\"Write your election manifesto\" value={manifesto} onChange={(e) => setManifesto(e.target.value)} required />\r\n//         </div>\r\n//         <div>\r\n//           <label>Education:</label>\r\n//           <input type=\"text\" placeholder=\"Your highest qualification\" value={education} onChange={(e) => setEducation(e.target.value)} required />\r\n//         </div>\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CandidateDashboard;\r\n\r\n\r\n// // src/components/CandidateDashboard.js\r\n// import React, { useState } from 'react';\r\n\r\n// const CandidateDashboard = () => {\r\n//   const [candidate, setCandidate] = useState({\r\n//     name: '',\r\n//     facilities: '',\r\n//     experience: '',\r\n//     manifesto: '',\r\n//     education: ''\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     setCandidate({ ...candidate, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const token = localStorage.getItem('token');\r\n//       const response = await fetch('/api/candidates', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//           'Authorization': `Bearer ${token}`\r\n//         },\r\n//         body: JSON.stringify(candidate)\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to add candidate');\r\n//       }\r\n\r\n//       alert('Candidate added successfully');\r\n//       setCandidate({\r\n//         name: '',\r\n//         facilities: '',\r\n//         experience: '',\r\n//         manifesto: '',\r\n//         education: ''\r\n//       });\r\n//     } catch (error) {\r\n//       console.error('Error adding candidate:', error);\r\n//       alert('Failed to add candidate');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <h2>Add Candidate</h2>\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"name\"\r\n//         placeholder=\"Name\"\r\n//         value={candidate.name}\r\n//         onChange={handleChange}\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"facilities\"\r\n//         placeholder=\"Facilities\"\r\n//         value={candidate.facilities}\r\n//         onChange={handleChange}\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"experience\"\r\n//         placeholder=\"Experience\"\r\n//         value={candidate.experience}\r\n//         onChange={handleChange}\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"manifesto\"\r\n//         placeholder=\"Manifesto\"\r\n//         value={candidate.manifesto}\r\n//         onChange={handleChange}\r\n//         required\r\n//       />\r\n//       <input\r\n//         type=\"text\"\r\n//         name=\"education\"\r\n//         placeholder=\"Education\"\r\n//         value={candidate.education}\r\n//         onChange={handleChange}\r\n//         required\r\n//       />\r\n//       <button type=\"submit\">Submit</button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default CandidateDashboard;\r\n// src/components/CandidateDashboard.js\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n\r\n// const CandidateDashboard = () => {\r\n//   const [candidate, setCandidate] = useState({\r\n//     name: '',\r\n//     facilities: '',\r\n//     experience: '',\r\n//     manifesto: '',\r\n//     education: ''\r\n//   });\r\n\r\n//   const [candidates, setCandidates] = useState([]);\r\n\r\n//   // Function to fetch candidates\r\n//   const fetchCandidates = async () => {\r\n//     try {\r\n//       const token = localStorage.getItem('token');\r\n//       const response = await fetch('/api/candidates', {\r\n//         headers: {\r\n//           'Authorization': `Bearer ${token}`\r\n//         }\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to fetch candidates');\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       setCandidates(data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching candidates:', error);\r\n//       alert('Failed to load candidates');\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchCandidates();\r\n//   }, []);\r\n\r\n//   const handleChange = (e) => {\r\n//     setCandidate({ ...candidate, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const token = localStorage.getItem('token');\r\n//       const response = await fetch('/api/candidates', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//           'Authorization': `Bearer ${token}`\r\n//         },\r\n//         body: JSON.stringify(candidate)\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to add candidate');\r\n//       }\r\n\r\n//       alert('Candidate added successfully');\r\n//       setCandidate({\r\n//         name: '',\r\n//         facilities: '',\r\n//         experience: '',\r\n//         manifesto: '',\r\n//         education: ''\r\n//       });\r\n      \r\n//       // Fetch updated candidates after adding a new one\r\n//       fetchCandidates();\r\n//     } catch (error) {\r\n//       console.error('Error adding candidate:', error);\r\n//       alert('Failed to add candidate');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <h2>Add Candidate</h2>\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"name\"\r\n//           placeholder=\"Name\"\r\n//           value={candidate.name}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"facilities\"\r\n//           placeholder=\"Facilities\"\r\n//           value={candidate.facilities}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"experience\"\r\n//           placeholder=\"Experience\"\r\n//           value={candidate.experience}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"manifesto\"\r\n//           placeholder=\"Manifesto\"\r\n//           value={candidate.manifesto}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"education\"\r\n//           placeholder=\"Education\"\r\n//           value={candidate.education}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n\r\n//       <h2>Candidates List</h2>\r\n//       <ul>\r\n//         {candidates.map((cand) => (\r\n//           <li key={cand._id}>\r\n//             {cand.name} - {cand.facilities} - {cand.experience} - {cand.manifesto} - {cand.education}\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CandidateDashboard;\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport './CandidateDashboard.css'; // For styles\r\n\r\nconst CandidateDashboard = () => {\r\n  const [candidate, setCandidate] = useState({\r\n    name: '',\r\n    facilities: '',\r\n    experience: '',\r\n    manifesto: '',\r\n    education: '',\r\n  });\r\n\r\n  const [candidates, setCandidates] = useState([]);\r\n\r\n  const fetchCandidates = async () => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch('/api/candidates', {\r\n      headers: { 'Authorization': `Bearer ${token}` },\r\n    });\r\n    const data = await response.json();\r\n    setCandidates(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCandidates();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setCandidate({ ...candidate, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const token = localStorage.getItem('token');\r\n    await fetch('/api/candidates', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(candidate),\r\n    });\r\n    alert('Candidate added successfully');\r\n    setCandidate({ name: '', facilities: '', experience: '', manifesto: '', education: '' });\r\n    fetchCandidates();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleSubmit} className=\"candidate-form\">\r\n        <h2>Candidate Dashboard</h2>\r\n        <label>Name:</label>\r\n        <input name=\"name\" value={candidate.name} onChange={handleChange} required />\r\n        <label>Facilities:</label>\r\n        <input name=\"facilities\" value={candidate.facilities} onChange={handleChange} required />\r\n        <label>Experience:</label>\r\n        <input name=\"experience\" value={candidate.experience} onChange={handleChange} required />\r\n        <label>Manifesto:</label>\r\n        <input name=\"manifesto\" value={candidate.manifesto} onChange={handleChange} required />\r\n        <label>Education:</label>\r\n        <input name=\"education\" value={candidate.education} onChange={handleChange} required />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CandidateDashboard;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}