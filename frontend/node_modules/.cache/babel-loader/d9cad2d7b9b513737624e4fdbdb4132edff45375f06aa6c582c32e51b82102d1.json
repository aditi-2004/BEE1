{"ast":null,"code":"// backend/server.js\nrequire('dotenv').config(); // Load environment variables\n\nconst express = require('express');\nconst mongoose = require('mongoose');\nconst cors = require('cors');\nconst authRoutes = require('./routes/authRoutes'); // Adjust the path as needed\n\nconst app = express();\n\n// Middleware\napp.use(express.json());\napp.use(cors()); // Enable CORS\n\n// Use the authentication routes\napp.use('/api/auth', authRoutes);\n\n// Connect to MongoDB\nmongoose.connect(process.env.MONGO_URI, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(() => console.log('MongoDB connected')).catch(err => console.error('MongoDB connection error:', err));\n\n// Start the server\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}`);\n});","map":{"version":3,"names":["require","config","express","mongoose","cors","authRoutes","app","use","json","connect","process","env","MONGO_URI","useNewUrlParser","useUnifiedTopology","then","console","log","catch","err","error","PORT","listen"],"sources":["D:/VS/VS/frontend/src/components/Login.js"],"sourcesContent":["// backend/server.js\r\nrequire('dotenv').config(); // Load environment variables\r\n\r\nconst express = require('express');\r\nconst mongoose = require('mongoose');\r\nconst cors = require('cors');\r\nconst authRoutes = require('./routes/authRoutes'); // Adjust the path as needed\r\n\r\nconst app = express();\r\n\r\n// Middleware\r\napp.use(express.json());\r\napp.use(cors()); // Enable CORS\r\n\r\n// Use the authentication routes\r\napp.use('/api/auth', authRoutes);\r\n\r\n// Connect to MongoDB\r\nmongoose.connect(process.env.MONGO_URI, {\r\n  useNewUrlParser: true,\r\n  useUnifiedTopology: true,\r\n})\r\n.then(() => console.log('MongoDB connected'))\r\n.catch(err => console.error('MongoDB connection error:', err));\r\n\r\n// Start the server\r\nconst PORT = process.env.PORT || 5000;\r\napp.listen(PORT, () => {\r\n  console.log(`Server is running on port ${PORT}`);\r\n});\r\n"],"mappings":"AAAA;AACAA,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;;AAE5B,MAAMC,OAAO,GAAGF,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMG,QAAQ,GAAGH,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMK,UAAU,GAAGL,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC;;AAEnD,MAAMM,GAAG,GAAGJ,OAAO,CAAC,CAAC;;AAErB;AACAI,GAAG,CAACC,GAAG,CAACL,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC;AACvBF,GAAG,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEjB;AACAE,GAAG,CAACC,GAAG,CAAC,WAAW,EAAEF,UAAU,CAAC;;AAEhC;AACAF,QAAQ,CAACM,OAAO,CAACC,OAAO,CAACC,GAAG,CAACC,SAAS,EAAE;EACtCC,eAAe,EAAE,IAAI;EACrBC,kBAAkB,EAAE;AACtB,CAAC,CAAC,CACDC,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAC5CC,KAAK,CAACC,GAAG,IAAIH,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAED,GAAG,CAAC,CAAC;;AAE9D;AACA,MAAME,IAAI,GAAGX,OAAO,CAACC,GAAG,CAACU,IAAI,IAAI,IAAI;AACrCf,GAAG,CAACgB,MAAM,CAACD,IAAI,EAAE,MAAM;EACrBL,OAAO,CAACC,GAAG,CAAC,6BAA6BI,IAAI,EAAE,CAAC;AAClD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}